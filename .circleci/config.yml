version: 2.1

jobs:
  build-linux:
    docker:
      - image: circleci/node:10
    working_directory: ~/permaweb
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            yarn install
      - run:
          name: Rebuild deps for electron node version
          command: |
            yarn exec electron-builder install-app-deps
      - run:
          name: Create build
          command: |
            yarn build
      - run:
          name: Build Installers
          command: |
            yarn dist --linux
      - run:
          name: Collect Artifacts
          command: |
            VERSION=v$(node -p "require('./package.json').version")
            echo VERSION
            OUT=~/output
            mkdir -p ${OUT}
            mv ~/permaweb/dist/Permaweb-${VERSION}.{AppImage} ${OUT}/
      - persist_to_workspace:
          root: ~/
          paths:
            - output
      - store_artifacts:
          path: ~/output
  #build-win:
    #docker:
      #- image: electronuserland/builder:wine
    #working_directory: ~/permaweb
    #steps:
      #- checkout
      #- run:
          #name: Install Dependencies
          #command: |
            #yarn install
      #- run:
          #name: Rebuild deps for electron node version
          #command: |
            #yarn exec electron-rebuild
      #- run:
          #name: Create build
          #command: |
            #yarn build
      #- run:
          #name: Build Installers
          #command: |
            #yarn dist-win
      #- save_cache:
          #paths:
            #- node_modules
          #key: dependencies-{{ checksum "package.json" }}
      #- run:
          #name: Collect Artifacts
          #command: |
            #VERSION=v$(node -p "require('./package.json').version")
            #OUT=~/output
            #mkdir -p ${OUT}
            #mv ~/permaweb/dist/Permaweb-${VERSION}.{exe} ${OUT}/
      #- persist_to_workspace:
          #root: ~/
          #paths:
            #- output
      #- store_artifacts:
          #path: ~/output
  #build-macos:
    #macos:
      #xcode: '10.2.0'
    #working_directory: ~/permaweb
    #steps:
      #- checkout
      #- run:
          #name: Install Dependencies
          #command: |
            #yarn install
      #- run:
          #name: Rebuild deps for electron node version
          #command: |
            #yarn exec electron-rebuild
      #- run:
          #name: Create build
          #command: |
            #yarn build
      #- run:
          #name: Link SSL
          #command: |
            #ln -s /usr/local/opt/openssl/include/openssl/ /usr/local/include/
      #- run:
          #name: Build Installers
          #command: |
            #yarn dist-mac
      #- save_cache:
          #paths:
            #- node_modules
          #key: v1-dependencies-{{ checksum "package.json" }}
      #- run:
          #name: Collect Artifacts
          #command: |
            #VERSION=v$(node -p "require('./package.json').version")
            #if [ "${CIRCLE_TAG}" != "" ]; then
                #VERSION=${CIRCLE_TAG}
            #fi
            #OUT=~/output
            #mkdir -p ${OUT}
            #mv ~/permaweb/dist/Permaweb-${VERSION}.dmg ${OUT}/
      #- persist_to_workspace:
          #root: ~/
          #paths:
            #- output
      #- store_artifacts:
          #path: ~/output
  #release:
    #docker:
      #- image: cibuilds/github:0.10
    #steps:
      #- checkout
      #- attach_workspace:
          #at: ~/
      #- deploy:
          #name: Release Installers
          #command: |
            #ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ~/output/

workflows:
  version: 2
  permaweb-desktop:
    jobs:
      - build-linux:
          filters:
            branches:
              only:
                - master
                - develop
                - feature/builds
            tags:
              only: /.*/
      #- build-win:
          #filters:
            #branches:
              #only:
                #- master
                #- develop
                #- feature/builds
            #tags:
              #only: /.*/
      #- build-macos:
          #filters:
            #branches:
              #only:
                #- master
                #- develop
                #- feature/builds
            #tags:
              #only: /.*/
      #- release:
          #requires:
            #- build-linux
            #- build-win
            #- build-macos
          #filters:
            #branches:
              #only:
                #- master
                #- develop
            #tags:
              #only: /^v.*
